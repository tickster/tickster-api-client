// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TicksterSampleApp.Infrastructure.Contexts;

#nullable disable

namespace TicksterSampleApp.Infrastructure.Migrations
{
    [DbContext(typeof(SampleAppContext))]
    [Migration("20250120163010_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.1");

            modelBuilder.Entity("TicksterSampleApp.Domain.Models.Campaign", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ActivationCode")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("TicksterCampaignId")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("TicksterCommunicationId")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("TicksterInternalReference")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Campaign");
                });

            modelBuilder.Entity("TicksterSampleApp.Domain.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("char(2)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("IdNumber")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("IsCompany")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("MobilePhone")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("PostalAddressLineOne")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PostalAddressLineTwo")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TicksterUserRefNo")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("TicksterSampleApp.Domain.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("End")
                        .HasColumnType("TEXT");

                    b.Property<bool>("HasTableReservation")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProductionName")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Start")
                        .HasColumnType("TEXT");

                    b.Property<string>("TicksterEventId")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("TicksterProductionId")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<int>("VenueId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("TicksterSampleApp.Domain.Models.Goods", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ArticleNumber")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("CanBePlacedAtTable")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EventId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GoodsId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("PartOfSeasonToken")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PartOfSeasonTokenGoodsId")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("PartOfTableReservation")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PriceIncVatAfterDiscount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("PurchaseId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ReceiptText")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Row")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Seat")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Section")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("VatPercent")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("VatPortion")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("PurchaseId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Goods");
                });

            modelBuilder.Entity("TicksterSampleApp.Domain.Models.ImportLog", b =>
                {
                    b.Property<int>("LastTicksterCrmId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.HasKey("LastTicksterCrmId", "Date");

                    b.ToTable("ImportLog");
                });

            modelBuilder.Entity("TicksterSampleApp.Domain.Models.Purchase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CampaignId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Channel")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("char(3)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DiscountCode")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("DiscountCodeName")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EogRequestCode")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("TEXT");

                    b.Property<string>("PrivacyRefNo")
                        .IsRequired()
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("TermsRefNo")
                        .IsRequired()
                        .HasColumnType("varchar(5)");

                    b.Property<string>("TicksterCrmId")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TicksterPurchaseRefNo")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<bool>("ToBePaidInRestaurantSystem")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Purchase");
                });

            modelBuilder.Entity("TicksterSampleApp.Domain.Models.Restaurant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("RestaurantName")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("VenueId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("VenueId");

                    b.ToTable("Restaurant");
                });

            modelBuilder.Entity("TicksterSampleApp.Domain.Models.Venue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("char(2)");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(6, 2)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(6, 2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TicksterVenueId")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Venue");
                });

            modelBuilder.Entity("TicksterSampleApp.Domain.Models.Goods", b =>
                {
                    b.HasOne("TicksterSampleApp.Domain.Models.Event", "Event")
                        .WithMany("Goods")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TicksterSampleApp.Domain.Models.Purchase", "Purchase")
                        .WithMany("Goods")
                        .HasForeignKey("PurchaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TicksterSampleApp.Domain.Models.Restaurant", "Restaurant")
                        .WithMany("Goods")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");

                    b.Navigation("Purchase");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("TicksterSampleApp.Domain.Models.Purchase", b =>
                {
                    b.HasOne("TicksterSampleApp.Domain.Models.Campaign", "Campaign")
                        .WithMany("Purchases")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TicksterSampleApp.Domain.Models.Customer", "Customer")
                        .WithMany("Purchases")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("TicksterSampleApp.Domain.Models.Restaurant", b =>
                {
                    b.HasOne("TicksterSampleApp.Domain.Models.Venue", "Venue")
                        .WithMany("Restaurants")
                        .HasForeignKey("VenueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Venue");
                });

            modelBuilder.Entity("TicksterSampleApp.Domain.Models.Campaign", b =>
                {
                    b.Navigation("Purchases");
                });

            modelBuilder.Entity("TicksterSampleApp.Domain.Models.Customer", b =>
                {
                    b.Navigation("Purchases");
                });

            modelBuilder.Entity("TicksterSampleApp.Domain.Models.Event", b =>
                {
                    b.Navigation("Goods");
                });

            modelBuilder.Entity("TicksterSampleApp.Domain.Models.Purchase", b =>
                {
                    b.Navigation("Goods");
                });

            modelBuilder.Entity("TicksterSampleApp.Domain.Models.Restaurant", b =>
                {
                    b.Navigation("Goods");
                });

            modelBuilder.Entity("TicksterSampleApp.Domain.Models.Venue", b =>
                {
                    b.Navigation("Restaurants");
                });
#pragma warning restore 612, 618
        }
    }
}
